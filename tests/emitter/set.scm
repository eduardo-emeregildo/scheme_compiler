(display "using set! on globals, should print 5,4:")
(define x 5)
(display x)
(set! x 4)
(display x)


(display "using set! on a captured variable,should print 3,4,4,4:")
(define (outer)
  (define loc 3)
  (define (inner)
    (display loc)
    (set! loc 4)
    (display loc))
  inner)
(define yeo (outer))
(yeo)
(yeo)


;here both setter and getter refer to the same a, this is why its failing
(display "example from crafting interpreters, should print updated:")
(define globalSet 0)
(define globalGet 1)
(define (main_func)
  (define a "initial")
  (define (setter) (set! a "updated"))
  (define (getter) (display a))
  (set! globalSet setter) (set! globalGet getter))
(main_func)
(globalSet)
(globalGet)